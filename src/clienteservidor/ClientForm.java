/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package clienteservidor;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.io.IOException;
import java.net.Socket;
import java.net.UnknownHostException;
import javax.swing.JOptionPane;
import java.io.*;
import java.net.*;

/**
 *
 * @author carpi
 */
public class ClientForm extends javax.swing.JFrame {

    Socket server = null;
    DataInputStream dis = null;
    DataOutputStream dos = null;
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(ClientForm.class.getName());

    /**
     * Creates new form ClientForm
     */
    public ClientForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_Conectar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt_RecMsg = new javax.swing.JTextArea();
        txt_msg = new javax.swing.JTextField();
        btn_Enviar = new javax.swing.JButton();
        btn_buscar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cliente");

        btn_Conectar.setText("Conectar");
        btn_Conectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ConectarActionPerformed(evt);
            }
        });

        txt_RecMsg.setColumns(20);
        txt_RecMsg.setRows(5);
        jScrollPane1.setViewportView(txt_RecMsg);

        txt_msg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_msgActionPerformed(evt);
            }
        });

        btn_Enviar.setText("Enviar");
        btn_Enviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_EnviarActionPerformed(evt);
            }
        });

        btn_buscar.setText("Buscar");
        btn_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_buscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_Conectar)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_msg, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_Enviar)
                            .addComponent(btn_buscar))))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(btn_Conectar)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_buscar)
                        .addGap(31, 31, 31)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_msg, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(btn_Enviar)))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_ConectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ConectarActionPerformed
        // TODO add your handling code here:
        try {
            String host = "192.168.1.58"; // IP del servidor
            int puerto = 5000;

            server = new Socket(host, puerto);
            JOptionPane.showMessageDialog(this, "Conectado al Servidor");

            dos = new DataOutputStream(server.getOutputStream());
            dis = new DataInputStream(server.getInputStream());

            // Hilo para recibir mensajes
            Thread recibir = new Thread(() -> {
                try {
                    String msg;
                    while ((msg = dis.readUTF()) != null) {
                        if (msg.startsWith("RESULTADO:")) {
                            // Procesar resultado de búsqueda
                            String resultado = msg.substring(10); // Remover "RESULTADO:"
                            
                            if (resultado.equals("NO_ENCONTRADO")) {
                                javax.swing.SwingUtilities.invokeLater(() -> {
                                    txt_RecMsg.append("\nNo se encontró ninguna persona con ese criterio");
                                });
                            } else {
                                // Formato: codigo|nombre|edad
                                String[] datos = resultado.split("\\|");
                                if (datos.length == 3) {
                                    javax.swing.SwingUtilities.invokeLater(() -> {
                                        txt_msg.setText("Código: " + datos[0] + ", Nombre: " + datos[1] + ", Edad: " + datos[2]);
                                        txt_RecMsg.append("\nPersona encontrada: " + datos[1] + " (Código: " + datos[0] + ", Edad: " + datos[2] + ")");
                                    });
                                }
                            }
                        } else {
                            txt_RecMsg.append("\nServidor: " + msg);
                        }
                    }
                } catch (IOException e) {
                    txt_RecMsg.append("\nConexión cerrada.");
                }
            });
            recibir.setDaemon(true);
            recibir.start();

        } catch (IOException e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_btn_ConectarActionPerformed

    private void btn_EnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_EnviarActionPerformed
        // TODO add your handling code here:
        try {
            String mensaje = txt_msg.getText();
            dos.writeUTF(mensaje);
            txt_RecMsg.append("\nYo: " + mensaje);
            txt_msg.setText("");
        } catch (IOException e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_btn_EnviarActionPerformed

    private void txt_msgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_msgActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_msgActionPerformed

    private void btn_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_buscarActionPerformed
        try {
            String criterio = txt_msg.getText().trim();
            
            if (criterio.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Por favor ingrese un código o nombre para buscar");
                return;
            }
            
            if (dos == null) {
                JOptionPane.showMessageDialog(this, "Debe conectarse al servidor primero");
                return;
            }
            
            // Enviar comando de búsqueda al servidor
            dos.writeUTF("BUSCAR:" + criterio);
            
            // Limpiar el campo de mensaje
            txt_msg.setText("");
            
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error al enviar solicitud de búsqueda: " + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_btn_buscarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new ClientForm().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Conectar;
    private javax.swing.JButton btn_Enviar;
    private javax.swing.JButton btn_buscar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txt_RecMsg;
    private javax.swing.JTextField txt_msg;
    // End of variables declaration//GEN-END:variables
}
